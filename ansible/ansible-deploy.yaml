---
  - hosts: server
    vars_files:
      - config.yaml
    
    vars:
      SSH_PORT: "{{ ssh_port | default('22') }}"

      docker_packages_to_remove:
        - docker.io
        - docker-compose
        - docker-compose-v2
        - docker-doc
        - podman-docker
        - containerd
        - runc

      docker_prerequired_packages:
        - ca-certificates
        - curl
        - gnupg
        - python3-pip
        - virtualenv
        - python3-setuptools

      docker_packages_to_install:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin

    tasks:

      # Check distribution
      - name: Check distro
        when: ansible_facts.distribution != "Ubuntu" or ansible_facts.distribution_version != "22.04"
        block:

        - name: Wrong distro message
          ansible.builtin.debug:
            msg: "Error, wrong distribution. Use Ubuntu LTS 22.04"

        - name: End_play if distribution != Ubuntu LTS 22.04
          ansible.builtin.meta: end_play

      # Update apt and OS
      - name: Update package cache
        become: yes
        ansible.builtin.apt:
          update_cache: yes
      
      - name: Upgrade system
        become: yes
        ansible.builtin.apt:
          upgrade: full

      # Config sshd
      - name: Check if ssh is running on port {{ SSH_PORT }}
        delegate_to: localhost
        ansible.builtin.wait_for:
          port: "{{ SSH_PORT }}"
          host: "{{ inventory_hostname }}"
          timeout: 5
        ignore_errors: true
        register: check_port

      - name: Change ssh port
        when: check_port.failed == true
        become: yes
        ansible.builtin.lineinfile:
          dest: "/etc/ssh/sshd_config"
          regexp: "^#Port"
          line: "Port {{ SSH_PORT }}"
        register: change_ssh_port

      - name: Disable root login
        become: yes
        ansible.builtin.lineinfile:
          dest: "/etc/ssh/sshd_config"
          regexp: "^#PermitRootLogin"
          line: "PermitRootLogin no"
        register: disable_root_login

      - name: Restart sshd
        when: change_ssh_port.changed == true or disable_root_login.changed == true
        become: yes
        ansible.builtin.systemd_service:
          name: sshd
          state: restarted

      - name: Change ansible ssh port to {{ SSH_PORT }}
        when: change_ssh_port.changed == true
        ansible.builtin.set_fact:
          ansible_port: '{{ SSH_PORT }}'

      # Config Firewall
      - name: Allow ports on UFW
        become: yes
        community.general.ufw:
          rule: allow
          port: '{{ item }}'
        loop:
          - '{{ SSH_PORT }}'
          - 80
          - 443

      - name: Enable UFW
        become: yes
        community.general.ufw:
          state: enabled
          policy: deny

      # Install Fail2ban
      - name: Install Fail2ban
        become: yes
        ansible.builtin.apt:
          name: fail2ban
        notify: Restart fail2ban

      # Install Docker
      - name: Check docker installation
        become: yes
        ansible.builtin.shell: "which docker"
        ignore_errors: yes
        register: check_docker
      
      - name: Install Docker
        when: check_docker.rc == 1
        block:

          - name: Uninstall docker unofficial and old packages
            become: yes
            ansible.builtin.apt:
              name: "{{ docker_packages_to_remove }}"
              state: absent

          - name: Install docker prerequired packages 
            become: yes
            ansible.builtin.apt:
              name: "{{ docker_prerequired_packages }}"
              state: present

          - name: Add docker GPG apt key
            become: yes
            ansible.builtin.apt_key:
              url: https://download.docker.com/linux/ubuntu/gpg
              state: present

          - name: Add docker repository
            become: yes
            ansible.builtin.apt_repository:
              repo: deb https://download.docker.com/linux/ubuntu jammy stable
              state: present

          - name: Install docker packages
            become: yes
            ansible.builtin.apt:
              name: "{{ docker_packages_to_install }}"
              state: present
              update_cache: yes

          - name: Install docker SDK for python
            ansible.builtin.pip:
              name: docker

    handlers:

      - name: Restart fail2ban
        become: yes
        ansible.builtin.systemd_service:
          name: fail2ban
          enabled: yes
          state: started
